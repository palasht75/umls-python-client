name: Auto Version Release and Publish to PyPI

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch

jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Get Latest Version Tag
      id: get_latest_version
      run: |
        # Get the latest version tag
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "Latest tag: $latest_tag"
        # Fallback to 1.0.0 if no tags exist
        if [ -z "$latest_tag" ]; then
          echo "No tags found, setting default tag to v1.0.0"
          echo "new_version=v1.0.0" >> $GITHUB_ENV
        else
          # Increment the patch version
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          patch=$((patch + 1))
          new_version="v$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV
        fi

    - name: Create Tag and Push
      run: |
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.new_version }}
        release_name: "Release ${{ env.new_version }}"
        body: "Auto-generated release."
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_to_pypi:
    name: Publish Package to PyPI
    needs: create_release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build Package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.6.4
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
